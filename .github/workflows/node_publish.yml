name: Build and Deploy Node Express to AWS EC2

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PROJECT_NAME: jonghun_project
  BUCKET_NAME: jonghun-cicd-bucket
  CODE_DEPLOY_APP_NAME: jonghun_cicd
  DEPLOYMENT_GROUP_NAME: jonghun_instance
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  PORT: ${{ secrets.PORT }}
  COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '18' 

      - name: Install dependencies
        run: |
          cd node_level4-5_express && yarn install

      - name: Create .env file
        run: |
          cd node_level4-5_express
          echo 'DATABASE_URL=${{ secrets.DATABASE_URL }}' > .env
          echo 'PORT=${{ secrets.PORT }}' >> .env
          echo 'COOKIE_SECRET=${{ secrets.COOKIE_SECRET }}' >> .env
          echo 'JWT_SECRET=${{ secrets.JWT_SECRET }}' >> .env

      # - name: test
      #   run: | 
      #     cd node_level4-5_express/src
      #     timeout 20s npx ts-node app.ts

      - name: Remove node_modules
        run: |
          cd node_level4-5_express
          rm -rf node_modules
      
      - name: Make Zip File
        run: |
          zip -qq -r ./$GITHUB_SHA.zip node_level4-5_express

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws s3 cp ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment 
                --application-name $CODE_DEPLOY_APP_NAME 
                --deployment-config-name CodeDeployDefault.AllAtOnce
                --deployment-group-name $DEPLOYMENT_GROUP_NAME 
                --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
